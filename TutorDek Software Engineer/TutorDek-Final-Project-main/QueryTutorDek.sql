-- CREATE DATABASE DB_TutorDek;
-- USE DB_TutorDek;

DROP TABLE IF EXISTS MsChatbotInteraction;
DROP TABLE IF EXISTS MsChat;
DROP TABLE IF EXISTS MsReview;
DROP TABLE IF EXISTS MsBooking;
DROP TABLE IF EXISTS MsMaterial;
DROP TABLE IF EXISTS MsSubject;
DROP TABLE IF EXISTS MsStudent;
DROP TABLE IF EXISTS MsTeacher;
DROP TABLE IF EXISTS MsAdmin;
DROP TABLE IF EXISTS MsUser;

-- CREATE TABLE TEST(
-- 	Name VARCHAR(255),
--     CreateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     UpdateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     BookingDate DATE DEFAULT (CURRENT_DATE)
-- );

-- INSERT INTO TEST (Name)
-- VALUES ("YAHAHAHA");

-- SELECT * FROM TEST;

-- DROP TABLE IF EXISTS TEST;

CREATE TABLE MsUser (
    UserID VARCHAR(7) PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Email VARCHAR(255) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL,
    Role ENUM('student', 'teacher', 'admin') NOT NULL,
    CreateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE MsAdmin (
    AdminID VARCHAR(7) PRIMARY KEY,
    Department VARCHAR(255),
    FOREIGN KEY (AdminID) REFERENCES MsUser(UserID),
    CreateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE MsTeacher (
    TeacherID VARCHAR(7) PRIMARY KEY,
    Qualification VARCHAR(255),
    ExperienceYear INT,
    Rating DECIMAL(2,2),
    Bio TEXT,
    CreateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (TeacherID) REFERENCES MsUser(UserID)
);

CREATE TABLE MsStudent (
    StudentID VARCHAR(7) PRIMARY KEY,
    EducationLevel ENUM('SD', 'SMP', 'SMA') NOT NULL,
    ClassLevel VARCHAR(50) NOT NULL,
    PreferredSubjects TEXT,
    FOREIGN KEY (StudentID) REFERENCES MsUser(UserID),
    CreateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE MsSubject (
    SubjectID VARCHAR(7) PRIMARY KEY,
    SubjectName VARCHAR(50) NOT NULL UNIQUE,
    EducationLevel ENUM('SD', 'SMP', 'SMA') NOT NULL,
    ClassLevel VARCHAR(50) NOT NULL,
    Description TEXT,
    CreateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE MsMaterial (
    MaterialID VARCHAR(7) PRIMARY KEY,
    SubjectID VARCHAR(7) NOT NULL,
    Title VARCHAR(50) NOT NULL,
    Semester ENUM('1', '2') NOT NULL,
    Content TEXT,
    FOREIGN KEY (SubjectID) REFERENCES MsSubject(SubjectID),
    CreateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE MsBooking(
    BookingID VARCHAR(7) PRIMARY KEY,
    StudentID VARCHAR(7) NOT NULL,
    TeacherID VARCHAR(7) NOT NULL,
    SubjectID VARCHAR(7) NOT NULL,
    MaterialID VARCHAR(7) NOT NULL,
    BookingDate DATE DEFAULT (CURRENT_DATE),
    StartTime DATETIME NOT NULL,
    EndTime DATETIME NOT NULL,
    Status ENUM('pending','confirmed','completed','cancelled') NOT NULL,
    FOREIGN KEY (StudentID) REFERENCES MsStudent(StudentID),
    FOREIGN KEY (TeacherID) REFERENCES MsTeacher(TeacherID),
    FOREIGN KEY (SubjectID) REFERENCES MsSubject(SubjectID),
    FOREIGN KEY (MaterialID) REFERENCES MsMaterial(MaterialID),
    CreateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE MsReview(
    ReviewID VARCHAR(7) PRIMARY KEY,
    BookingID VARCHAR(7) NOT NULL,
    StudentID VARCHAR(7) NOT NULL,
    TeacherID VARCHAR(7) NOT NULL,
    RatingGiven INT NOT NULL,
    Comment TEXT,
    FOREIGN KEY (BookingID) REFERENCES MsBooking(BookingID),
    FOREIGN KEY (StudentID) REFERENCES MsStudent(StudentID),
    FOREIGN KEY (TeacherID) REFERENCES MsTeacher(TeacherID),
    CreateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdateAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE MsChat(
    ChatID VARCHAR(7) PRIMARY KEY,
    StudentID VARCHAR(7),
    TeacherID VARCHAR(7),
    Message TEXT,
    SentAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (StudentID) REFERENCES MsStudent(StudentID),
    FOREIGN KEY (TeacherID) REFERENCES MsTeacher(TeacherID)
);

CREATE TABLE MsChatbotInteraction(
    InteractionID VARCHAR(7) PRIMARY KEY,
    UserID VARCHAR(7),
    Question TEXT,
    Response TEXT,
    InteractionTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES MsUser(UserID)
);

DELIMITER //

CREATE TRIGGER trg_MsUser_ID BEFORE INSERT ON MsUser
FOR EACH ROW
BEGIN
    SET NEW.UserID = CONCAT('USR', LPAD(IFNULL((SELECT MAX(SUBSTRING(UserID, 4, 4)) + 1 FROM MsUser), 1), 4, '0'));
END //

CREATE TRIGGER trg_MsAdmin_ID BEFORE INSERT ON MsAdmin
FOR EACH ROW
BEGIN
    SET NEW.AdminID = CONCAT('ADM', LPAD(IFNULL((SELECT MAX(SUBSTRING(AdminID, 4, 4)) + 1 FROM MsAdmin), 1), 4, '0'));
END //

CREATE TRIGGER trg_MsTeacher_ID BEFORE INSERT ON MsTeacher
FOR EACH ROW
BEGIN
    SET NEW.TeacherID = CONCAT('TCH', LPAD(IFNULL((SELECT MAX(SUBSTRING(TeacherID, 4, 4)) + 1 FROM MsTeacher), 1), 4, '0'));
END //

CREATE TRIGGER trg_MsStudent_ID BEFORE INSERT ON MsStudent
FOR EACH ROW
BEGIN
    SET NEW.StudentID = CONCAT('STD', LPAD(IFNULL((SELECT MAX(SUBSTRING(StudentID, 4, 4)) + 1 FROM MsStudent), 1), 4, '0'));
END //

CREATE TRIGGER trg_MsSubject_ID BEFORE INSERT ON MsSubject
FOR EACH ROW
BEGIN
    SET NEW.SubjectID = CONCAT('SUB', LPAD(IFNULL((SELECT MAX(SUBSTRING(SubjectID, 4, 4)) + 1 FROM MsSubject), 1), 4, '0'));
END //

CREATE TRIGGER trg_MsMaterial_ID BEFORE INSERT ON MsMaterial
FOR EACH ROW
BEGIN
    SET NEW.MaterialID = CONCAT('MAT', LPAD(IFNULL((SELECT MAX(SUBSTRING(MaterialID, 4, 4)) + 1 FROM MsMaterial), 1), 4, '0'));
END //

CREATE TRIGGER trg_MsBooking_ID BEFORE INSERT ON MsBooking
FOR EACH ROW
BEGIN
    SET NEW.BookingID = CONCAT('BKG', LPAD(IFNULL((SELECT MAX(SUBSTRING(BookingID, 4, 4)) + 1 FROM MsBooking), 1), 4, '0'));
END //

CREATE TRIGGER trg_MsReview_ID BEFORE INSERT ON MsReview
FOR EACH ROW
BEGIN
    SET NEW.ReviewID = CONCAT('REV', LPAD(IFNULL((SELECT MAX(SUBSTRING(ReviewID, 4, 4)) + 1 FROM MsReview), 1), 4, '0'));
END //

CREATE TRIGGER trg_MsChat_ID BEFORE INSERT ON MsChat
FOR EACH ROW
BEGIN
    SET NEW.ChatID = CONCAT('CHT', LPAD(IFNULL((SELECT MAX(SUBSTRING(ChatID, 4, 4)) + 1 FROM MsChat), 1), 4, '0'));
END //

CREATE TRIGGER trg_MsChatbotInteraction_ID BEFORE INSERT ON MsChatbotInteraction
FOR EACH ROW
BEGIN
    SET NEW.InteractionID = CONCAT('INT', LPAD(IFNULL((SELECT MAX(SUBSTRING(InteractionID, 4, 4)) + 1 FROM MsChatbotInteraction), 1), 4, '0'));
END //

DELIMITER ;


-- INSERT INTO MsSubject (SubjectName, EducationLevel, ClassLevel, Description)
-- VALUES ('Matematika Ilmu yang Menyenangkan', 'SMA', 'Kelas 12', 'Matematika dasar dan lanjutan');

-- SELECT * FROM MsSubject;
